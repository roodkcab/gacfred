/***********************************************************************
!!!!!! DO NOT MODIFY !!!!!!

GacGen.exe Resource.xml

This file is generated by Workflow compiler
https://github.com/vczh-libraries
***********************************************************************/

#include "Gacfred.h"
/* CodePack:BeginIgnore() */
#ifndef VCZH_DEBUG_NO_REFLECTION
/* CodePack:ConditionOff(VCZH_DEBUG_NO_REFLECTION, GacfredReflection.h) */
#include "GacfredReflection.h"
#endif
/* CodePack:EndIgnore() */

#if defined( _MSC_VER)
#pragma warning(push)
#pragma warning(disable:4250)
#elif defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wparentheses-equality"
#elif defined(__GNUC__)
#pragma GCC diagnostic push
#endif

#define GLOBAL_SYMBOL ::vl_workflow_global::Gacfred::
#define GLOBAL_NAME ::vl_workflow_global::Gacfred::Instance().
#define GLOBAL_OBJ &::vl_workflow_global::Gacfred::Instance()

/* USER_CONTENT_BEGIN(custom global declarations) */
/* USER_CONTENT_END() */

/***********************************************************************
Class (::gacfred::ChatGPT)
***********************************************************************/

namespace gacfred
{
	void ChatGPT::Paste()
	{/* USER_CONTENT_BEGIN(::gacfred::ChatGPT) */
		throw ::vl::Exception(L"You should implement this function.");
	}/* USER_CONTENT_END() */

	::vl::Ptr<::gacfred::IChatGPTViewModel> ChatGPT::GetViewModel()
	{
		return this->__vwsn_parameter_ViewModel;
	}

	ChatGPT::ChatGPT(::vl::Ptr<::gacfred::IChatGPTViewModel> __vwsn_ctor_parameter_ViewModel)
		: ::vl::presentation::controls::GuiCustomControl(::vl::presentation::theme::ThemeName::CustomControl)
		, selected((- static_cast<::vl::vint64_t>(1L)))
		, __vwsn_parameter_ViewModel(::vl::Ptr<::gacfred::IChatGPTViewModel>())
	{
		(this->__vwsn_parameter_ViewModel = __vwsn_ctor_parameter_ViewModel);
		auto __vwsn_resource_ = ::vl::__vwsn::This(::vl::presentation::GetResourceManager())->GetResourceFromClassName(::vl::WString::Unmanaged(L"gacfred::ChatGPT"));
		auto __vwsn_resolver_ = ::vl::Ptr<::vl::presentation::GuiResourcePathResolver>(new ::vl::presentation::GuiResourcePathResolver(__vwsn_resource_, ::vl::__vwsn::This(__vwsn_resource_.Obj())->GetWorkingDirectory()));
		::vl::__vwsn::This(this)->SetResourceResolver(__vwsn_resolver_);
		::vl::__vwsn::This(this)->__vwsn_gacfred_ChatGPT_Initialize(this);
		this->__vwsn_instance_ctor_();
	}

	void ChatGPT::__vwsn_instance_ctor_()
	{
		(::vl::__vwsn::This(this->GetViewModel().Obj())->ListView = static_cast<::vl::presentation::controls::GuiListControl*>(this->listViewChats));
	}

	ChatGPT::~ChatGPT()
	{
		this->FinalizeInstanceRecursively(static_cast<::vl::presentation::controls::GuiCustomControl*>(this));
	}

}
#undef GLOBAL_SYMBOL
#undef GLOBAL_NAME
#undef GLOBAL_OBJ

#if defined( _MSC_VER)
#pragma warning(pop)
#elif defined(__clang__)
#pragma clang diagnostic pop
#elif defined(__GNUC__)
#pragma GCC diagnostic pop
#endif
